!function(window,document,Laya){Laya.un,Laya.uns,Laya.static;var __class=Laya.class,DiagonalMovement=(Laya.getset,Laya.__newvec,function(){function DiagonalMovement(){}return __class(DiagonalMovement,"PathFinding.core.DiagonalMovement"),DiagonalMovement.Always=1,DiagonalMovement.Never=2,DiagonalMovement.IfAtMostOneObstacle=3,DiagonalMovement.OnlyWhenNoObstacles=4,DiagonalMovement}()),Heuristic=(function(){function Grid(width_or_matrix,height,matrix){this.width=0,this.height=0,this.nodes=null;var width=0;"number"==typeof width_or_matrix?width=width_or_matrix:(height=width_or_matrix.length,width=width_or_matrix[0].length,matrix=width_or_matrix),this.width=width,this.height=height,this.nodes=this._buildNodes(width,height,matrix)}__class(Grid,"PathFinding.core.Grid");var __proto=Grid.prototype;__proto._buildNodes=function(width,height,matrix){var i=0,j=0,nodes=[];for(i=0;i<height;++i)for(nodes[i]=[],j=0;j<width;++j)nodes[i][j]=new Node$1(j,i);if(null==matrix)return nodes;if(matrix.length!=height||matrix[0].length!=width)throw new Error("Matrix size does not fit");for(i=0;i<height;++i)for(j=0;j<width;++j)matrix[i][j]&&(nodes[i][j].walkable=!1);return nodes},__proto.getNodeAt=function(x,y){return this.nodes[y][x]},__proto.isWalkableAt=function(x,y){return this.isInside(x,y)&&this.nodes[y][x].walkable},__proto.isInside=function(x,y){return x>=0&&x<this.width&&y>=0&&y<this.height},__proto.setWalkableAt=function(x,y,walkable){this.nodes[y][x].walkable=walkable},__proto.getNeighbors=function(node,diagonalMovement){var x=node.x,y=node.y,neighbors=[],s0=!1,d0=!1,s1=!1,d1=!1,s2=!1,d2=!1,s3=!1,d3=!1,nodes=this.nodes;if(this.isWalkableAt(x,y-1)&&(neighbors.push(nodes[y-1][x]),s0=!0),this.isWalkableAt(x+1,y)&&(neighbors.push(nodes[y][x+1]),s1=!0),this.isWalkableAt(x,y+1)&&(neighbors.push(nodes[y+1][x]),s2=!0),this.isWalkableAt(x-1,y)&&(neighbors.push(nodes[y][x-1]),s3=!0),diagonalMovement==DiagonalMovement.Never)return neighbors;if(diagonalMovement==DiagonalMovement.OnlyWhenNoObstacles)d0=s3&&s0,d1=s0&&s1,d2=s1&&s2,d3=s2&&s3;else if(diagonalMovement==DiagonalMovement.IfAtMostOneObstacle)d0=s3||s0,d1=s0||s1,d2=s1||s2,d3=s2||s3;else{if(diagonalMovement!=DiagonalMovement.Always)throw new Error("Incorrect value of diagonalMovement");d0=!0,d1=!0,d2=!0,d3=!0}return d0&&this.isWalkableAt(x-1,y-1)&&neighbors.push(nodes[y-1][x-1]),d1&&this.isWalkableAt(x+1,y-1)&&neighbors.push(nodes[y-1][x+1]),d2&&this.isWalkableAt(x+1,y+1)&&neighbors.push(nodes[y+1][x+1]),d3&&this.isWalkableAt(x-1,y+1)&&neighbors.push(nodes[y+1][x-1]),neighbors},__proto.clone=function(){var i=0,j=0,width=this.width,height=this.height,thisNodes=this.nodes,newGrid=new Grid(width,height),newNodes=[];for(i=0;i<height;++i)for(newNodes[i]=[],j=0;j<width;++j)newNodes[i][j]=new Node$1(j,i,thisNodes[i][j].walkable);return newGrid.nodes=newNodes,newGrid},__proto.reset=function(){for(var _node,i=0;i<this.height;++i)for(var j=0;j<this.width;++j)(_node=this.nodes[i][j]).g=0,_node.f=0,_node.h=0,_node.by=0,_node.parent=null,_node.opened=null,_node.closed=null,_node.tested=null},Grid.createGridFromAStarMap=function(texture){for(var textureWidth=texture.width,textureHeight=texture.height,pixelsInfo=texture.getPixels(),aStarArr=[],index=0,w=0;w<textureWidth;w++)for(var colaStarArr=aStarArr[w]=[],h=0;h<textureHeight;h++){var r=pixelsInfo[index++],g=pixelsInfo[index++],b=pixelsInfo[index++],a=pixelsInfo[index++];colaStarArr[h]=255==r&&255==g&&255==b&&255==a?1:0}return new Grid(textureWidth,textureHeight,aStarArr)}}(),function(){function Heuristic(){}return __class(Heuristic,"PathFinding.core.Heuristic"),Heuristic.manhattan=function(dx,dy){return dx+dy},Heuristic.euclidean=function(dx,dy){return Math.sqrt(dx*dx+dy*dy)},Heuristic.octile=function(dx,dy){var F=Math.SQRT2-1;return dx<dy?F*dx+dy:F*dy+dx},Heuristic.chebyshev=function(dx,dy){return Math.max(dx,dy)},Heuristic}()),Node$1=function(){function Node(x,y,walkable){this.x=0,this.y=0,this.g=0,this.f=0,this.h=0,this.by=0,this.parent=null,this.opened=null,this.closed=null,this.tested=null,this.retainCount=null,this.walkable=!1,void 0===walkable&&(walkable=!0),this.x=x,this.y=y,this.walkable=walkable}return __class(Node,"PathFinding.core.Node",null,"Node$1"),Node}(),Util=function(){function Util(){}return __class(Util,"PathFinding.core.Util"),Util.backtrace=function(node){for(var path=[[node.x,node.y]];node.parent;)node=node.parent,path.push([node.x,node.y]);return path.reverse()},Util.biBacktrace=function(nodeA,nodeB){var pathA=Util.backtrace(nodeA),pathB=Util.backtrace(nodeB);return pathA.concat(pathB.reverse())},Util.pathLength=function(path){var i=0,sum=0,a=0,b=0,dx=0,dy=0;for(i=1;i<path.length;++i)a=path[i-1],b=path[i],dx=a[0]-b[0],dy=a[1]-b[1],sum+=Math.sqrt(dx*dx+dy*dy);return sum},Util.interpolate=function(x0,y0,x1,y1){var sx,sy,dx,dy,abs=Math.abs,line=[],err=0,e2=0;for(sx=x0<x1?1:-1,sy=y0<y1?1:-1,err=(dx=abs(x1-x0))-(dy=abs(y1-y0));line.push([x0,y0]),x0!=x1||y0!=y1;)(e2=2*err)>-dy&&(err-=dy,x0+=sx),e2<dx&&(err+=dx,y0+=sy);return line},Util.expandPath=function(path){var coord0,coord1,interpolated,expanded=[],len=path.length,interpolatedLen=0,i=0,j=0;if(len<2)return expanded;for(i=0;i<len-1;++i)for(coord0=path[i],coord1=path[i+1],interpolatedLen=(interpolated=Util.interpolate(coord0[0],coord0[1],coord1[0],coord1[1])).length,j=0;j<interpolatedLen-1;++j)expanded.push(interpolated[j]);return expanded.push(path[len-1]),expanded},Util.smoothenPath=function(grid,path){var newPath,coord,line,testCoord,lastValidCoord,len=path.length,x0=path[0][0],y0=path[0][1],x1=path[len-1][0],y1=path[len-1][1],sx=0,sy=0,ex=0,ey=0,i=0,j=0,blocked=!1;for(newPath=[[sx=x0,sy=y0]],i=2;i<len;++i){for(ex=(coord=path[i])[0],ey=coord[1],line=Util.interpolate(sx,sy,ex,ey),blocked=!1,j=1;j<line.length;++j)if(testCoord=line[j],!grid.isWalkableAt(testCoord[0],testCoord[1])){blocked=!0;break}blocked&&(lastValidCoord=path[i-1],newPath.push(lastValidCoord),sx=lastValidCoord[0],sy=lastValidCoord[1])}return newPath.push([x1,y1]),newPath},Util.compressPath=function(path){if(path.length<3)return path;var compressed=[],sx=path[0][0],sy=path[0][1],px=path[1][0],py=path[1][1],dx=px-sx,dy=py-sy,lx=0,ly=0,ldx=0,ldy=0,sq=NaN,i=0;for(dx/=sq=Math.sqrt(dx*dx+dy*dy),dy/=sq,compressed.push([sx,sy]),i=2;i<path.length;i++)lx=px,ly=py,ldx=dx,ldy=dy,dx=(px=path[i][0])-lx,dy=(py=path[i][1])-ly,dy/=sq=Math.sqrt(dx*dx+dy*dy),(dx/=sq)===ldx&&dy===ldy||compressed.push([lx,ly]);return compressed.push([px,py]),compressed},Util}(),AStarFinder=function(){function AStarFinder(opt){this.allowDiagonal=!1,this.dontCrossCorners=!1,this.heuristic=null,this.weight=0,this.diagonalMovement=0,opt=opt||{},this.allowDiagonal=opt.allowDiagonal,this.dontCrossCorners=opt.dontCrossCorners,this.heuristic=opt.heuristic||Heuristic.manhattan,this.weight=opt.weight||1,this.diagonalMovement=opt.diagonalMovement,this.diagonalMovement||(this.allowDiagonal?this.dontCrossCorners?this.diagonalMovement=DiagonalMovement.OnlyWhenNoObstacles:this.diagonalMovement=DiagonalMovement.IfAtMostOneObstacle:this.diagonalMovement=DiagonalMovement.Never),this.diagonalMovement===DiagonalMovement.Never?this.heuristic=opt.heuristic||Heuristic.manhattan:this.heuristic=opt.heuristic||Heuristic.octile}return __class(AStarFinder,"PathFinding.finders.AStarFinder"),AStarFinder.prototype.findPath=function(startX,startY,endX,endY,grid){var node,neighbors,neighbor,openList=new Heap(function(nodeA,nodeB){return nodeA.f-nodeB.f}),startNode=grid.getNodeAt(startX,startY),endNode=grid.getNodeAt(endX,endY),heuristic=this.heuristic,diagonalMovement=this.diagonalMovement,weight=this.weight,abs=Math.abs,SQRT2=Math.SQRT2,i=0,l=0,x=0,y=0,ng=0;for(startNode.g=0,startNode.f=0,openList.push(startNode),startNode.opened=!0;!openList.empty();){if((node=openList.pop()).closed=!0,node===endNode)return Util.backtrace(endNode);for(i=0,l=(neighbors=grid.getNeighbors(node,diagonalMovement)).length;i<l;++i)(neighbor=neighbors[i]).closed||(x=neighbor.x,y=neighbor.y,ng=node.g+(x-node.x==0||y-node.y==0?1:SQRT2),(!neighbor.opened||ng<neighbor.g)&&(neighbor.g=ng,neighbor.h=neighbor.h||weight*heuristic(abs(x-endX),abs(y-endY)),neighbor.f=neighbor.g+neighbor.h,neighbor.parent=node,neighbor.opened?openList.updateItem(neighbor):(openList.push(neighbor),neighbor.opened=!0)))}return[]},AStarFinder}(),BiAStarFinder=function(){function BiAStarFinder(opt){this.allowDiagonal=!1,this.dontCrossCorners=!1,this.diagonalMovement=0,this.heuristic=null,this.weight=0,opt=opt||{},this.allowDiagonal=opt.allowDiagonal,this.dontCrossCorners=opt.dontCrossCorners,this.diagonalMovement=opt.diagonalMovement,this.heuristic=opt.heuristic||Heuristic.manhattan,this.weight=opt.weight||1,this.diagonalMovement||(this.allowDiagonal?this.dontCrossCorners?this.diagonalMovement=DiagonalMovement.OnlyWhenNoObstacles:this.diagonalMovement=DiagonalMovement.IfAtMostOneObstacle:this.diagonalMovement=DiagonalMovement.Never),this.diagonalMovement==DiagonalMovement.Never?this.heuristic=opt.heuristic||Heuristic.manhattan:this.heuristic=opt.heuristic||Heuristic.octile}return __class(BiAStarFinder,"PathFinding.finders.BiAStarFinder"),BiAStarFinder.prototype.findPath=function(startX,startY,endX,endY,grid){var node,neighbors,neighbor,cmp=function(nodeA,nodeB){return nodeA.f-nodeB.f},startOpenList=new Heap(cmp),endOpenList=new Heap(cmp),startNode=grid.getNodeAt(startX,startY),endNode=grid.getNodeAt(endX,endY),heuristic=this.heuristic,diagonalMovement=this.diagonalMovement,weight=this.weight,abs=Math.abs,SQRT2=Math.SQRT2,i=0,l=0,x=0,y=0,ng=0;for(startNode.g=0,startNode.f=0,startOpenList.push(startNode),startNode.opened=1,endNode.g=0,endNode.f=0,endOpenList.push(endNode),endNode.opened=2;!startOpenList.empty()&&!endOpenList.empty();){for((node=startOpenList.pop()).closed=!0,i=0,l=(neighbors=grid.getNeighbors(node,diagonalMovement)).length;i<l;++i)if(!(neighbor=neighbors[i]).closed){if(2===neighbor.opened)return Util.biBacktrace(node,neighbor);x=neighbor.x,y=neighbor.y,ng=node.g+(x-node.x==0||y-node.y==0?1:SQRT2),(!neighbor.opened||ng<neighbor.g)&&(neighbor.g=ng,neighbor.h=neighbor.h||weight*heuristic(abs(x-endX),abs(y-endY)),neighbor.f=neighbor.g+neighbor.h,neighbor.parent=node,neighbor.opened?startOpenList.updateItem(neighbor):(startOpenList.push(neighbor),neighbor.opened=1))}for((node=endOpenList.pop()).closed=!0,i=0,l=(neighbors=grid.getNeighbors(node,diagonalMovement)).length;i<l;++i)if(!(neighbor=neighbors[i]).closed){if(1===neighbor.opened)return Util.biBacktrace(neighbor,node);x=neighbor.x,y=neighbor.y,ng=node.g+(x-node.x==0||y-node.y==0?1:SQRT2),(!neighbor.opened||ng<neighbor.g)&&(neighbor.g=ng,neighbor.h=neighbor.h||weight*heuristic(abs(x-startX),abs(y-startY)),neighbor.f=neighbor.g+neighbor.h,neighbor.parent=node,neighbor.opened?endOpenList.updateItem(neighbor):(endOpenList.push(neighbor),neighbor.opened=2))}}return[]},BiAStarFinder}(),JumpPointFinderBase=(function(){function BiBreadthFirstFinder(opt){this.allowDiagonal=!1,this.dontCrossCorners=!1,this.heuristic=null,this.weight=0,this.diagonalMovement=0,opt=opt||{},this.allowDiagonal=opt.allowDiagonal,this.dontCrossCorners=opt.dontCrossCorners,this.diagonalMovement=opt.diagonalMovement,this.diagonalMovement||(this.allowDiagonal?this.dontCrossCorners?this.diagonalMovement=DiagonalMovement.OnlyWhenNoObstacles:this.diagonalMovement=DiagonalMovement.IfAtMostOneObstacle:this.diagonalMovement=DiagonalMovement.Never)}__class(BiBreadthFirstFinder,"PathFinding.finders.BiBreadthFirstFinder"),BiBreadthFirstFinder.prototype.findPath=function(startX,startY,endX,endY,grid){var neighbors,neighbor,node,startNode=grid.getNodeAt(startX,startY),endNode=grid.getNodeAt(endX,endY),startOpenList=[],endOpenList=[],diagonalMovement=this.diagonalMovement,i=0,l=0;for(startOpenList.push(startNode),startNode.opened=!0,startNode.by=0,endOpenList.push(endNode),endNode.opened=!0,endNode.by=1;startOpenList.length&&endOpenList.length;){for((node=startOpenList.shift()).closed=!0,i=0,l=(neighbors=grid.getNeighbors(node,diagonalMovement)).length;i<l;++i)if(!(neighbor=neighbors[i]).closed)if(neighbor.opened){if(1===neighbor.by)return Util.biBacktrace(node,neighbor)}else startOpenList.push(neighbor),neighbor.parent=node,neighbor.opened=!0,neighbor.by=0;for((node=endOpenList.shift()).closed=!0,i=0,l=(neighbors=grid.getNeighbors(node,diagonalMovement)).length;i<l;++i)if(!(neighbor=neighbors[i]).closed)if(neighbor.opened){if(0===neighbor.by)return Util.biBacktrace(neighbor,node)}else endOpenList.push(neighbor),neighbor.parent=node,neighbor.opened=!0,neighbor.by=1}return[]}}(),function(){function BreadthFirstFinder(opt){this.allowDiagonal=!1,this.dontCrossCorners=!1,this.heuristic=null,this.weight=0,this.diagonalMovement=0,opt=opt||{},this.allowDiagonal=opt.allowDiagonal,this.dontCrossCorners=opt.dontCrossCorners,this.diagonalMovement=opt.diagonalMovement,this.diagonalMovement||(this.allowDiagonal?this.dontCrossCorners?this.diagonalMovement=DiagonalMovement.OnlyWhenNoObstacles:this.diagonalMovement=DiagonalMovement.IfAtMostOneObstacle:this.diagonalMovement=DiagonalMovement.Never)}__class(BreadthFirstFinder,"PathFinding.finders.BreadthFirstFinder"),BreadthFirstFinder.prototype.findPath=function(startX,startY,endX,endY,grid){var neighbors,neighbor,node,openList=[],diagonalMovement=this.diagonalMovement,startNode=grid.getNodeAt(startX,startY),endNode=grid.getNodeAt(endX,endY),i=0,l=0;for(openList.push(startNode),startNode.opened=!0;openList.length;){if((node=openList.shift()).closed=!0,node===endNode)return Util.backtrace(endNode);for(i=0,l=(neighbors=grid.getNeighbors(node,diagonalMovement)).length;i<l;++i)(neighbor=neighbors[i]).closed||neighbor.opened||(openList.push(neighbor),neighbor.opened=!0,neighbor.parent=node)}return[]}}(),function(){function IDAStarFinder(opt){this.allowDiagonal=!1,this.dontCrossCorners=!1,this.heuristic=null,this.weight=0,this.diagonalMovement=0,this.trackRecursion=!1,this.timeLimit=NaN,opt=opt||{},this.allowDiagonal=opt.allowDiagonal,this.dontCrossCorners=opt.dontCrossCorners,this.diagonalMovement=opt.diagonalMovement,this.heuristic=opt.heuristic||Heuristic.manhattan,this.weight=opt.weight||1,this.trackRecursion=opt.trackRecursion||!1,this.timeLimit=opt.timeLimit||1/0,this.diagonalMovement||(this.allowDiagonal?this.dontCrossCorners?this.diagonalMovement=DiagonalMovement.OnlyWhenNoObstacles:this.diagonalMovement=DiagonalMovement.IfAtMostOneObstacle:this.diagonalMovement=DiagonalMovement.Never),this.diagonalMovement===DiagonalMovement.Never?this.heuristic=opt.heuristic||Heuristic.manhattan:this.heuristic=opt.heuristic||Heuristic.octile}__class(IDAStarFinder,"PathFinding.finders.IDAStarFinder"),IDAStarFinder.prototype.findPath=function(startX,startY,endX,endY,grid){var route,_$this=this,startTime=(new Date).getTime(),h=function(a,b){return _$this.heuristic(Math.abs(b.x-a.x),Math.abs(b.y-a.y))},search=function(node,g,cutoff,route,depth){if(0,_$this.timeLimit>0&&(new Date).getTime()-startTime>1e3*_$this.timeLimit)return 1/0;var f=g+h(node,end)*_$this.weight;if(f>cutoff)return f;if(node==end)return route[depth]=[node.x,node.y],node;var neighbour,a,b,min=0,t=0,k=0,neighbours=grid.getNeighbors(node,_$this.diagonalMovement);for(k=0,min=1/0;neighbour=neighbours[k];++k){if(_$this.trackRecursion&&(neighbour.retainCount=neighbour.retainCount+1||1,1!=neighbour.tested&&(neighbour.tested=!0)),(t=search(neighbour,g+(b=neighbour,(a=node).x===b.x||a.y===b.y?1:Math.SQRT2),cutoff,route,depth+1))instanceof PathFinding.core.Node)return route[depth]=[node.x,node.y],t;_$this.trackRecursion&&0==--neighbour.retainCount&&(neighbour.tested=!1),t<min&&(min=t)}return min},start=grid.getNodeAt(startX,startY),end=grid.getNodeAt(endX,endY),cutOff=h(start,end),j=0,t=0;for(j=0;;++j){if((t=search(start,0,cutOff,route=[],0))==1/0){route=[];break}if(t instanceof PathFinding.core.Node)break;cutOff=t}return route}}(),function(){function JumpPointFinderBase(opt){this.grid=null,this.openList=null,this.startNode=null,this.endNode=null,this.heuristic=null,this.trackJumpRecursion=!1,opt=opt||{},this.heuristic=opt.heuristic||Heuristic.manhattan,this.trackJumpRecursion=opt.trackJumpRecursion||!1}__class(JumpPointFinderBase,"PathFinding.finders.JumpPointFinderBase");var __proto=JumpPointFinderBase.prototype;return __proto.findPath=function(startX,startY,endX,endY,grid){var node,openList=this.openList=new Heap(function(nodeA,nodeB){return nodeA.f-nodeB.f}),startNode=this.startNode=grid.getNodeAt(startX,startY),endNode=this.endNode=grid.getNodeAt(endX,endY);for(this.grid=grid,startNode.g=0,startNode.f=0,openList.push(startNode),startNode.opened=!0;!openList.empty();){if((node=openList.pop()).closed=!0,node==endNode)return Util.expandPath(Util.backtrace(endNode));this._identifySuccessors(node)}return[]},__proto._identifySuccessors=function(node){var neighbors,neighbor,jumpPoint,l,jumpNode,grid=this.grid,heuristic=this.heuristic,openList=this.openList,endX=this.endNode.x,endY=this.endNode.y,i=0,x=node.x,y=node.y,jx=0,jy=0,d=0,ng=0,abs=Math.abs;Math.max;for(i=0,l=(neighbors=this._findNeighbors(node)).length;i<l;++i)if(neighbor=neighbors[i],jumpPoint=this._jump(neighbor[0],neighbor[1],x,y)){if(jx=jumpPoint[0],jy=jumpPoint[1],(jumpNode=grid.getNodeAt(jx,jy)).closed)continue;d=Heuristic.octile(abs(jx-x),abs(jy-y)),ng=node.g+d,(!jumpNode.opened||ng<jumpNode.g)&&(jumpNode.g=ng,jumpNode.h=jumpNode.h||heuristic(abs(jx-endX),abs(jy-endY)),jumpNode.f=jumpNode.g+jumpNode.h,jumpNode.parent=node,jumpNode.opened?openList.updateItem(jumpNode):(openList.push(jumpNode),jumpNode.opened=!0))}},__proto._jump=function(x,y,px,py){return[]},__proto._findNeighbors=function(node){return[]},JumpPointFinderBase}()),Heap=(function(){function JumpPointFinder(opt){}__class(JumpPointFinder,"PathFinding.finders.JumpPointFinder")}(),function(){function TraceFinder(opt){this.allowDiagonal=!1,this.dontCrossCorners=!1,this.diagonalMovement=0,this.heuristic=null,opt=opt||{},this.allowDiagonal=opt.allowDiagonal,this.dontCrossCorners=opt.dontCrossCorners,this.heuristic=opt.heuristic||Heuristic.manhattan,this.diagonalMovement=opt.diagonalMovement,this.diagonalMovement||(this.allowDiagonal?this.dontCrossCorners?this.diagonalMovement=DiagonalMovement.OnlyWhenNoObstacles:this.diagonalMovement=DiagonalMovement.IfAtMostOneObstacle:this.diagonalMovement=DiagonalMovement.Never),this.diagonalMovement==DiagonalMovement.Never?this.heuristic=opt.heuristic||Heuristic.manhattan:this.heuristic=opt.heuristic||Heuristic.octile}__class(TraceFinder,"PathFinding.finders.TraceFinder"),TraceFinder.prototype.findPath=function(startX,startY,endX,endY,grid){var node,neighbors,neighbor,openList=new Heap(function(nodeA,nodeB){return nodeA.f-nodeB.f}),startNode=grid.getNodeAt(startX,startY),endNode=grid.getNodeAt(endX,endY),heuristic=this.heuristic,abs=(this.allowDiagonal,this.dontCrossCorners,Math.abs),SQRT2=Math.SQRT2,i=0,l=0,x=0,y=0,ng=0;for(startNode.g=0,startNode.f=0,openList.push(startNode),startNode.opened=!0;!openList.empty();){if((node=openList.pop()).closed=!0,node===endNode)return Util.backtrace(endNode);for(i=0,l=(neighbors=grid.getNeighbors(node,this.diagonalMovement)).length;i<l;++i)(neighbor=neighbors[i]).closed||(x=neighbor.x,y=neighbor.y,ng=node.g+(x-node.x==0||y-node.y==0?1:SQRT2),(!neighbor.opened||ng<neighbor.g)&&(neighbor.g=ng*l/9,neighbor.h=neighbor.h||heuristic(abs(x-endX),abs(y-endY)),neighbor.f=neighbor.g+neighbor.h,neighbor.parent=node,neighbor.opened?openList.updateItem(neighbor):(openList.push(neighbor),neighbor.opened=!0)))}return[]}}(),function(){function Heap(cmp){this.cmp=null,this.nodes=null,this.heapFunction=new HeapFunction,this.cmp=null!=cmp?cmp:this.heapFunction.defaultCmp,this.nodes=[]}__class(Heap,"PathFinding.libs.Heap");var __proto=Heap.prototype;return __proto.push=function(x){return this.heapFunction.heappush(this.nodes,x,this.cmp)},__proto.pop=function(){return this.heapFunction.heappop(this.nodes,this.cmp)},__proto.peek=function(){return this.nodes[0]},__proto.contains=function(x){return-1!==this.nodes.indexOf(x)},__proto.replace=function(x){return this.heapFunction.heapreplace(this.nodes,x,this.cmp)},__proto.pushpop=function(x){return this.heapFunction.heappushpop(this.nodes,x,this.cmp)},__proto.heapify=function(){return this.heapFunction.heapify(this.nodes,this.cmp)},__proto.updateItem=function(x){return this.heapFunction.updateItem(this.nodes,x,this.cmp)},__proto.clear=function(){return this.nodes=[]},__proto.empty=function(){return 0===this.nodes.length},__proto.size=function(){return this.nodes.length},__proto.clone=function(){var heap=new Heap;return heap.nodes=this.nodes.slice(0),heap},__proto.toArray=function(){return this.nodes.slice(0)},Heap}()),HeapFunction=function(){function HeapFunction(){this.defaultCmp=function(x,y){return x<y?-1:x>y?1:0}}__class(HeapFunction,"PathFinding.libs.HeapFunction");var __proto=HeapFunction.prototype;return __proto.insort=function(a,x,lo,hi,cmp){var mid=NaN;if(null==lo&&(lo=0),null==cmp&&(cmp=this.defaultCmp),lo<0)throw new Error("lo must be non-negative");for(null==hi&&(hi=a.length);lo<hi;)cmp(x,a[mid=Math.floor((lo+hi)/2)])<0?hi=mid:lo=mid+1;return[].splice.apply(a,[lo,lo-lo].concat(x)),x},__proto.heappush=function(array,item,cmp){return null==cmp&&(cmp=this.defaultCmp),array.push(item),this._siftdown(array,0,array.length-1,cmp)},__proto.heappop=function(array,cmp){var lastelt,returnitem;return null==cmp&&(cmp=this.defaultCmp),lastelt=array.pop(),array.length?(returnitem=array[0],array[0]=lastelt,this._siftup(array,0,cmp)):returnitem=lastelt,returnitem},__proto.heapreplace=function(array,item,cmp){var returnitem;return null==cmp&&(cmp=this.defaultCmp),returnitem=array[0],array[0]=item,this._siftup(array,0,cmp),returnitem},__proto.heappushpop=function(array,item,cmp){var _ref;return null==cmp&&(cmp=this.defaultCmp),array.length&&cmp(array[0],item)<0&&(item=(_ref=[array[0],item])[0],array[0]=_ref[1],this._siftup(array,0,cmp)),item},__proto.heapify=function(array,cmp){var _len,_ref,_ref1,_results,_results1,i=0,_i=0,_j=0;for(null==cmp&&(cmp=this.defaultCmp),_results=[],_i=0,_len=(_ref1=function(){for(_results1=[],_j=0,_ref=Math.floor(array.length/2);0<=_ref?_j<_ref:_j>_ref;0<=_ref?_j++:_j--)_results1.push(_j);return _results1}.apply(this).reverse()).length;_i<_len;_i++)i=_ref1[_i],_results.push(this._siftup(array,i,cmp));return _results},__proto.updateItem=function(array,item,cmp){var pos;return null==cmp&&(cmp=this.defaultCmp),-1===(pos=array.indexOf(item))?null:(this._siftdown(array,0,pos,cmp),this._siftup(array,pos,cmp))},__proto.nlargest=function(array,n,cmp){var elem,result,_len,_ref,_i=0;if(null==cmp&&(cmp=this.defaultCmp),!(result=array.slice(0,n)).length)return result;for(this.heapify(result,cmp),_i=0,_len=(_ref=array.slice(n)).length;_i<_len;_i++)elem=_ref[_i],this.heappushpop(result,elem,cmp);return result.sort(cmp).reverse()},__proto.nsmallest=function(array,n,cmp){var elem,los,result,_len,_ref,_ref1,_results,_i=0,_j=0;if(null==cmp&&(cmp=this.defaultCmp),10*n<=array.length){if(!(result=array.slice(0,n).sort(cmp)).length)return result;for(los=result[result.length-1],_i=0,_len=(_ref=array.slice(n)).length;_i<_len;_i++)cmp(elem=_ref[_i],los)<0&&(this.insort(result,elem,0,null,cmp),result.pop(),los=result[result.length-1]);return result}for(this.heapify(array,cmp),_results=[],_j=0,_ref1=Math.min(n,array.length);0<=_ref1?_j<_ref1:_j>_ref1;0<=_ref1?++_j:--_j)_results.push(this.heappop(array,cmp));return _results},__proto._siftdown=function(array,startpos,pos,cmp){var newitem,parent,parentpos=0;for(null==cmp&&(cmp=this.defaultCmp),newitem=array[pos];pos>startpos&&cmp(newitem,parent=array[parentpos=pos-1>>1])<0;)array[pos]=parent,pos=parentpos;return array[pos]=newitem},__proto._siftup=function(array,pos,cmp){var endpos,newitem,startpos,childpos=0,rightpos=0;for(null==cmp&&(cmp=this.defaultCmp),endpos=array.length,startpos=pos,newitem=array[pos],childpos=2*pos+1;childpos<endpos;)(rightpos=childpos+1)<endpos&&!(cmp(array[childpos],array[rightpos])<0)&&(childpos=rightpos),array[pos]=array[childpos],childpos=2*(pos=childpos)+1;return array[pos]=newitem,this._siftdown(array,startpos,pos,cmp)},HeapFunction}();(function(_super){function BestFirstFinder(opt){BestFirstFinder.__super.call(this,opt);var orig=this.heuristic;this.heuristic=function(dx,dy){return 1e6*orig(dx,dy)}}__class(BestFirstFinder,"PathFinding.finders.BestFirstFinder",AStarFinder)})(),function(_super){function BiBestFirstFinder(opt){BiBestFirstFinder.__super.call(this,opt);var orig=this.heuristic;this.heuristic=function(dx,dy){return 1e6*orig(dx,dy)}}__class(BiBestFirstFinder,"PathFinding.finders.BiBestFirstFinder",BiAStarFinder)}(),function(_super){function BiDijkstraFinder(opt){BiDijkstraFinder.__super.call(this,opt),this.heuristic=function(dx,dy){return 0}}__class(BiDijkstraFinder,"PathFinding.finders.BiDijkstraFinder",BiAStarFinder)}(),function(_super){function DijkstraFinder(opt){DijkstraFinder.__super.call(this,opt),this.heuristic=function(dx,dy){return 0}}__class(DijkstraFinder,"PathFinding.finders.DijkstraFinder",AStarFinder)}(),function(_super){function JPFAlwaysMoveDiagonally(opt){JPFAlwaysMoveDiagonally.__super.call(this,opt)}__class(JPFAlwaysMoveDiagonally,"PathFinding.finders.JPFAlwaysMoveDiagonally",JumpPointFinderBase);var __proto=JPFAlwaysMoveDiagonally.prototype;__proto._jump=function(x,y,px,py){var grid=this.grid,dx=x-px,dy=y-py;if(!grid.isWalkableAt(x,y))return null;if(1==this.trackJumpRecursion&&(grid.getNodeAt(x,y).tested=!0),grid.getNodeAt(x,y)==this.endNode)return[x,y];if(0!==dx&&0!==dy){if(grid.isWalkableAt(x-dx,y+dy)&&!grid.isWalkableAt(x-dx,y)||grid.isWalkableAt(x+dx,y-dy)&&!grid.isWalkableAt(x,y-dy))return[x,y];if(this._jump(x+dx,y,x,y)||this._jump(x,y+dy,x,y))return[x,y]}else if(0!==dx){if(grid.isWalkableAt(x+dx,y+1)&&!grid.isWalkableAt(x,y+1)||grid.isWalkableAt(x+dx,y-1)&&!grid.isWalkableAt(x,y-1))return[x,y]}else if(grid.isWalkableAt(x+1,y+dy)&&!grid.isWalkableAt(x+1,y)||grid.isWalkableAt(x-1,y+dy)&&!grid.isWalkableAt(x-1,y))return[x,y];return this._jump(x+dx,y+dy,x,y)},__proto._findNeighbors=function(node){var neighborNodes,neighborNode,parent=node.parent,x=node.x,y=node.y,grid=this.grid,px=0,py=0,dx=0,dy=0,neighbors=[],i=0,l=0;if(parent)px=parent.x,py=parent.y,dx=(x-px)/Math.max(Math.abs(x-px),1),dy=(y-py)/Math.max(Math.abs(y-py),1),0!==dx&&0!==dy?(grid.isWalkableAt(x,y+dy)&&neighbors.push([x,y+dy]),grid.isWalkableAt(x+dx,y)&&neighbors.push([x+dx,y]),grid.isWalkableAt(x+dx,y+dy)&&neighbors.push([x+dx,y+dy]),grid.isWalkableAt(x-dx,y)||neighbors.push([x-dx,y+dy]),grid.isWalkableAt(x,y-dy)||neighbors.push([x+dx,y-dy])):0===dx?(grid.isWalkableAt(x,y+dy)&&neighbors.push([x,y+dy]),grid.isWalkableAt(x+1,y)||neighbors.push([x+1,y+dy]),grid.isWalkableAt(x-1,y)||neighbors.push([x-1,y+dy])):(grid.isWalkableAt(x+dx,y)&&neighbors.push([x+dx,y]),grid.isWalkableAt(x,y+1)||neighbors.push([x+dx,y+1]),grid.isWalkableAt(x,y-1)||neighbors.push([x+dx,y-1]));else for(i=0,l=(neighborNodes=grid.getNeighbors(node,DiagonalMovement.Always)).length;i<l;++i)neighborNode=neighborNodes[i],neighbors.push([neighborNode.x,neighborNode.y]);return neighbors}}(),function(_super){function JPFMoveDiagonallyIfAtMostOneObstacle(opt){JPFMoveDiagonallyIfAtMostOneObstacle.__super.call(this,opt)}__class(JPFMoveDiagonallyIfAtMostOneObstacle,"PathFinding.finders.JPFMoveDiagonallyIfAtMostOneObstacle",JumpPointFinderBase);var __proto=JPFMoveDiagonallyIfAtMostOneObstacle.prototype;__proto._jump=function(x,y,px,py){var grid=this.grid,dx=x-px,dy=y-py;if(!grid.isWalkableAt(x,y))return null;if(!0===this.trackJumpRecursion&&(grid.getNodeAt(x,y).tested=!0),grid.getNodeAt(x,y)==this.endNode)return[x,y];if(0!==dx&&0!==dy){if(grid.isWalkableAt(x-dx,y+dy)&&!grid.isWalkableAt(x-dx,y)||grid.isWalkableAt(x+dx,y-dy)&&!grid.isWalkableAt(x,y-dy))return[x,y];if(this._jump(x+dx,y,x,y)||this._jump(x,y+dy,x,y))return[x,y]}else if(0!==dx){if(grid.isWalkableAt(x+dx,y+1)&&!grid.isWalkableAt(x,y+1)||grid.isWalkableAt(x+dx,y-1)&&!grid.isWalkableAt(x,y-1))return[x,y]}else if(grid.isWalkableAt(x+1,y+dy)&&!grid.isWalkableAt(x+1,y)||grid.isWalkableAt(x-1,y+dy)&&!grid.isWalkableAt(x-1,y))return[x,y];return grid.isWalkableAt(x+dx,y)||grid.isWalkableAt(x,y+dy)?this._jump(x+dx,y+dy,x,y):null},__proto._findNeighbors=function(node){var neighborNodes,neighborNode,parent=node.parent,x=node.x,y=node.y,grid=this.grid,px=0,py=0,dx=0,dy=0,neighbors=[],i=0,l=0;if(parent)px=parent.x,py=parent.y,dx=(x-px)/Math.max(Math.abs(x-px),1),dy=(y-py)/Math.max(Math.abs(y-py),1),0!==dx&&0!==dy?(grid.isWalkableAt(x,y+dy)&&neighbors.push([x,y+dy]),grid.isWalkableAt(x+dx,y)&&neighbors.push([x+dx,y]),(grid.isWalkableAt(x,y+dy)||grid.isWalkableAt(x+dx,y))&&neighbors.push([x+dx,y+dy]),!grid.isWalkableAt(x-dx,y)&&grid.isWalkableAt(x,y+dy)&&neighbors.push([x-dx,y+dy]),!grid.isWalkableAt(x,y-dy)&&grid.isWalkableAt(x+dx,y)&&neighbors.push([x+dx,y-dy])):0===dx?grid.isWalkableAt(x,y+dy)&&(neighbors.push([x,y+dy]),grid.isWalkableAt(x+1,y)||neighbors.push([x+1,y+dy]),grid.isWalkableAt(x-1,y)||neighbors.push([x-1,y+dy])):grid.isWalkableAt(x+dx,y)&&(neighbors.push([x+dx,y]),grid.isWalkableAt(x,y+1)||neighbors.push([x+dx,y+1]),grid.isWalkableAt(x,y-1)||neighbors.push([x+dx,y-1]));else for(i=0,l=(neighborNodes=grid.getNeighbors(node,DiagonalMovement.IfAtMostOneObstacle)).length;i<l;++i)neighborNode=neighborNodes[i],neighbors.push([neighborNode.x,neighborNode.y]);return neighbors}}(),function(_super){function JPFMoveDiagonallyIfNoObstacles(opt){JPFMoveDiagonallyIfNoObstacles.__super.call(this,opt)}__class(JPFMoveDiagonallyIfNoObstacles,"PathFinding.finders.JPFMoveDiagonallyIfNoObstacles",JumpPointFinderBase);var __proto=JPFMoveDiagonallyIfNoObstacles.prototype;__proto._jump=function(x,y,px,py){var grid=this.grid,dx=x-px,dy=y-py;if(!grid.isWalkableAt(x,y))return null;if(!0===this.trackJumpRecursion&&(grid.getNodeAt(x,y).tested=!0),grid.getNodeAt(x,y)===this.endNode)return[x,y];if(0!==dx&&0!==dy){if(this._jump(x+dx,y,x,y)||this._jump(x,y+dy,x,y))return[x,y]}else if(0!==dx){if(grid.isWalkableAt(x,y-1)&&!grid.isWalkableAt(x-dx,y-1)||grid.isWalkableAt(x,y+1)&&!grid.isWalkableAt(x-dx,y+1))return[x,y]}else if(0!==dy&&(grid.isWalkableAt(x-1,y)&&!grid.isWalkableAt(x-1,y-dy)||grid.isWalkableAt(x+1,y)&&!grid.isWalkableAt(x+1,y-dy)))return[x,y];return grid.isWalkableAt(x+dx,y)&&grid.isWalkableAt(x,y+dy)?this._jump(x+dx,y+dy,x,y):null},__proto._findNeighbors=function(node){var neighborNodes,neighborNode,parent=node.parent,x=node.x,y=node.y,grid=this.grid,px=0,py=0,dx=0,dy=0,neighbors=[],i=0,l=0;if(parent)if(px=parent.x,py=parent.y,dx=(x-px)/Math.max(Math.abs(x-px),1),dy=(y-py)/Math.max(Math.abs(y-py),1),0!==dx&&0!==dy)grid.isWalkableAt(x,y+dy)&&neighbors.push([x,y+dy]),grid.isWalkableAt(x+dx,y)&&neighbors.push([x+dx,y]),grid.isWalkableAt(x,y+dy)&&grid.isWalkableAt(x+dx,y)&&neighbors.push([x+dx,y+dy]);else{var isNextWalkable=!1;if(0!==dx){isNextWalkable=grid.isWalkableAt(x+dx,y);var isTopWalkable=grid.isWalkableAt(x,y+1),isBottomWalkable=grid.isWalkableAt(x,y-1);isNextWalkable&&(neighbors.push([x+dx,y]),isTopWalkable&&neighbors.push([x+dx,y+1]),isBottomWalkable&&neighbors.push([x+dx,y-1])),isTopWalkable&&neighbors.push([x,y+1]),isBottomWalkable&&neighbors.push([x,y-1])}else if(0!==dy){isNextWalkable=grid.isWalkableAt(x,y+dy);var isRightWalkable=grid.isWalkableAt(x+1,y),isLeftWalkable=grid.isWalkableAt(x-1,y);isNextWalkable&&(neighbors.push([x,y+dy]),isRightWalkable&&neighbors.push([x+1,y+dy]),isLeftWalkable&&neighbors.push([x-1,y+dy])),isRightWalkable&&neighbors.push([x+1,y]),isLeftWalkable&&neighbors.push([x-1,y])}}else for(i=0,l=(neighborNodes=grid.getNeighbors(node,DiagonalMovement.OnlyWhenNoObstacles)).length;i<l;++i)neighborNode=neighborNodes[i],neighbors.push([neighborNode.x,neighborNode.y]);return neighbors}}(),function(_super){function JPFNeverMoveDiagonally(opt){JPFNeverMoveDiagonally.__super.call(this,opt)}__class(JPFNeverMoveDiagonally,"PathFinding.finders.JPFNeverMoveDiagonally",JumpPointFinderBase);var __proto=JPFNeverMoveDiagonally.prototype;__proto._jump=function(x,y,px,py){var grid=this.grid,dx=x-px,dy=y-py;if(!grid.isWalkableAt(x,y))return null;if(!0===this.trackJumpRecursion&&(grid.getNodeAt(x,y).tested=!0),grid.getNodeAt(x,y)==this.endNode)return[x,y];if(0!==dx){if(grid.isWalkableAt(x,y-1)&&!grid.isWalkableAt(x-dx,y-1)||grid.isWalkableAt(x,y+1)&&!grid.isWalkableAt(x-dx,y+1))return[x,y]}else{if(0===dy)throw new Error("Only horizontal and vertical movements are allowed");if(grid.isWalkableAt(x-1,y)&&!grid.isWalkableAt(x-1,y-dy)||grid.isWalkableAt(x+1,y)&&!grid.isWalkableAt(x+1,y-dy))return[x,y];if(this._jump(x+1,y,x,y)||this._jump(x-1,y,x,y))return[x,y]}return this._jump(x+dx,y+dy,x,y)},__proto._findNeighbors=function(node){var neighborNodes,neighborNode,parent=node.parent,x=node.x,y=node.y,grid=this.grid,px=0,py=0,dx=0,dy=0,neighbors=[],i=0,l=0;if(parent)px=parent.x,py=parent.y,dx=(x-px)/Math.max(Math.abs(x-px),1),dy=(y-py)/Math.max(Math.abs(y-py),1),0!==dx?(grid.isWalkableAt(x,y-1)&&neighbors.push([x,y-1]),grid.isWalkableAt(x,y+1)&&neighbors.push([x,y+1]),grid.isWalkableAt(x+dx,y)&&neighbors.push([x+dx,y])):0!==dy&&(grid.isWalkableAt(x-1,y)&&neighbors.push([x-1,y]),grid.isWalkableAt(x+1,y)&&neighbors.push([x+1,y]),grid.isWalkableAt(x,y+dy)&&neighbors.push([x,y+dy]));else for(i=0,l=(neighborNodes=grid.getNeighbors(node,DiagonalMovement.Never)).length;i<l;++i)neighborNode=neighborNodes[i],neighbors.push([neighborNode.x,neighborNode.y]);return neighbors}}()}(window,document,Laya),"function"==typeof define&&define.amd&&define("laya.core",["require","exports"],function(require,exports){"use strict";for(var i in Object.defineProperty(exports,"__esModule",{value:!0}),Laya){var o=Laya[i];o&&o.__isclass&&(exports[i]=o)}});